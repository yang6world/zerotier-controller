--- controller/PostgreSQL.cpp	2021-08-20 16:27:38.599930650 +0800
+++ controller/PostgreSQL.cpp.new	2021-09-05 19:48:55.925215931 +0800
@@ -582,6 +582,7 @@ void PostgreSQL::initializeMembers(PGcon
 
 			std::string ctime = PQgetvalue(res, i, 5);
 			config["id"] = memberId;
+			config["address"] = memberId;
 			config["nwid"] = networkId;
 			config["activeBridge"] = (strcmp(PQgetvalue(res, i, 2), "t") == 0);
 			config["authorized"] = (strcmp(PQgetvalue(res, i, 3), "t") == 0);
@@ -1080,7 +1081,10 @@ void PostgreSQL::commitThread()
 				try {
 					std::string memberId = (*config)["id"];
 					std::string networkId = (*config)["nwid"];
-					std::string identity = (*config)["identity"];
+					std::string identity = "";
+					if (!(*config)["identity"].is_null()) {
+						std::string identity = (*config)["identity"];
+					}
 					std::string target = "NULL";
 
 					if (!(*config)["remoteTraceTarget"].is_null()) {
@@ -1476,38 +1480,40 @@ void PostgreSQL::commitThread()
 						continue;
 					}
 					auto dns = (*config)["dns"];
-					std::string domain = dns["domain"];
-					std::stringstream servers;
-					servers << "{";
-					for (auto j = dns["servers"].begin(); j < dns["servers"].end(); ++j) {
-						servers << *j;
-						if ( (j+1) != dns["servers"].end()) {
-							servers << ",";
+					if (dns.is_object()) {	
+						std::string domain = dns["domain"];
+						std::stringstream servers;
+						servers << "{";
+						for (auto j = dns["servers"].begin(); j < dns["servers"].end(); ++j) {
+							servers << *j;
+							if ( (j+1) != dns["servers"].end()) {
+								servers << ",";
+							}
 						}
-					}
-					servers << "}";
+						servers << "}";
 
-					const char *p[3] = {
-						id.c_str(),
-						domain.c_str(),
-						servers.str().c_str()
-					};
+						const char *p[3] = {
+							id.c_str(),
+							domain.c_str(),
+							servers.str().c_str()
+						};
 
-					res = PQexecParams(conn, "INSERT INTO ztc_network_dns (network_id, domain, servers) VALUES ($1, $2, $3) ON CONFLICT (network_id) DO UPDATE SET domain = EXCLUDED.domain, servers = EXCLUDED.servers",
-						3,
-						NULL,
-						p,
-						NULL,
-						NULL,
-						0);
-					if (PQresultStatus(res) != PGRES_COMMAND_OK) {
-						fprintf(stderr, "ERROR: Error updating DNS: %s\n", PQresultErrorMessage(res));
+						res = PQexecParams(conn, "INSERT INTO ztc_network_dns (network_id, domain, servers) VALUES ($1, $2, $3) ON CONFLICT (network_id) DO UPDATE SET domain = EXCLUDED.domain, servers = EXCLUDED.servers",
+							3,
+							NULL,
+							p,
+							NULL,
+							NULL,
+							0);
+						if (PQresultStatus(res) != PGRES_COMMAND_OK) {
+							fprintf(stderr, "ERROR: Error updating DNS: %s\n", PQresultErrorMessage(res));
+							PQclear(res);
+							PQclear(PQexec(conn, "ROLLBACK"));
+							err = true;
+							break;
+						}
 						PQclear(res);
-						PQclear(PQexec(conn, "ROLLBACK"));
-						err = true;
-						break;
 					}
-					PQclear(res);
 
 					res = PQexec(conn, "COMMIT");
 					if (PQresultStatus(res) != PGRES_COMMAND_OK) {
@@ -1533,7 +1539,7 @@ void PostgreSQL::commitThread()
 					}
 
 				} catch (std::exception &e) {
-					fprintf(stderr, "ERROR: Error updating member: %s\n", e.what());
+					fprintf(stderr, "ERROR: Error updating network: %s\n", e.what());
 				}
 				// if (_rc != NULL) {
 				// 	try {
@@ -1551,7 +1557,7 @@ void PostgreSQL::commitThread()
 				// }
 			} else if (objtype == "_delete_network") {
 				try {
-					std::string networkId = (*config)["nwid"];
+					std::string networkId = (*config)["id"];
 					const char *values[1] = {
 						networkId.c_str()
 					};
